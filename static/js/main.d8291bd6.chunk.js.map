{"version":3,"sources":["TodoList.js","Todo.js","Clock.js","App.js","index.js"],"names":["TodoList","props","className","items","map","todo","index","key","onClick","remove","Todo","handleInputkeyPress","event","value","target","setState","todoList","state","localStorage","setItem","JSON","stringify","preventDefault","handleClickRemove","window","confirm","slice","bind","this","parse","getItem","placeholder","onKeyPress","Component","Clock","time","Date","num","digit","Array","Math","max","String","length","join","timerID","setInterval","tick","clearInterval","getFullYear","zeroPadding","getMonth","getDate","getDay","getHours","getMinutes","getSeconds","bgGradient","bgUrl","App","setNewBackground","bgImage","newQueryUrl","backgroundImage","style","destination","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.d8291bd6.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./TodoList.css\";\n\nconst TodoList = props => {\n    return (\n        <div className=\"TodoList-body\"> \n        {\n            props.items.map((todo, index) => \n            <div className=\"TodoList-items\" key={index} index={index}>\n                <button \n                    onClick={() => props.remove(index)}\n                    className=\"TodoList-button\"\n                >&#9932;</button>\n                <span>{todo}</span>\n            </div>)\n        }\n        </div>\n    )     \n};\n\nexport default TodoList;\n","import React, { Component } from \"react\";\nimport TodoList from \"./TodoList\";\nimport \"./Todo.css\";\n\nclass Todo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            todoList: []\n        };\n    this.handleInputkeyPress = this.handleInputkeyPress.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            todoList: JSON.parse(localStorage.getItem(\"todoList\")) || []\n        })\n    }\n    \n    handleInputkeyPress = event => {\n        const { target: {value} } = event;\n\n        if (event.key === \"Enter\") {\n            this.setState({\n                todoList: [...this.state.todoList, value]\n            },\n            // 함수 형태가 아니면 가장 마지막 넣은 todo가 로컬스토리지에 저장이 안된다..왜?\n            () => localStorage.setItem(\"todoList\", JSON.stringify(this.state.todoList))\n            );\n        }\n\n        event.target.value = \"\";\n        event.preventDefault();\n    }\n\n    handleClickRemove = index => {\n        if (window.confirm(\"Do you really want to delete?\")) {\n            this.setState({\n                todoList: [\n                    ...this.state.todoList.slice(0, index),\n                    ...this.state.todoList.slice(index+1)\n                ]},\n                () => localStorage.setItem(\"todoList\", JSON.stringify(this.state.todoList))\n            );\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"Todo-body\">\n                <input \n                    placeholder=\"Write things to do\" \n                    onKeyPress={this.handleInputkeyPress}\n                    className=\"Todo-input\"\n                ></input>\n                <TodoList items={this.state.todoList} remove={this.handleClickRemove} />\n            </div>\n        );\n    }\n}\n\nexport default Todo;","import React, { Component } from \"react\";\nimport \"./Clock.css\";\n\nclass Clock extends Component {\n    state = {\n        time: new Date()\n    }\n    \n    zeroPadding(num, digit) {\n        return Array(Math.max(digit - String(num).length + 1, 0)).join(0) + num;\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(() => this.tick(), 1000);\n    }\n\n    componentWillUnmount() {\n        // 컴포넌트가 화면에서 사라진 후에도 1초마다 실행되지 않도록 해제\n        clearInterval(this.timerID);\n    }\n\n    tick() {\n        // 실행될 때마다 state가 업데이트됨! -> 재랜더링!\n        this.setState({\n            time: new Date()\n        });\n    }\n\n\n    render() {\n        const weekdays = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'];\n        const { time } = this.state;\n\n        return(\n            <div className=\"Clock-body\">\n                <p className=\"Clock-date\">\n                    {time.getFullYear()}\n                    &nbsp;- {this.zeroPadding(time.getMonth() + 1, 2)}\n                    &nbsp;- {this.zeroPadding(time.getDate(), 2)}\n                    &nbsp; {weekdays[time.getDay()]}\n\n                </p>\n                <p className=\"Clock-time\">\n                    {this.zeroPadding(time.getHours(), 2)} \n                    &nbsp;: {this.zeroPadding(time.getMinutes(), 2)}\n                    &nbsp;: {this.zeroPadding(time.getSeconds(), 2)}\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default Clock;","import React, { Component } from \"react\";\nimport Todo from \"./Todo\";\nimport Clock from \"./Clock\";\nimport \"./App.css\";\n\n\n// css의 background-image 속성\nconst bgGradient = `linear-gradient(\n        to bottom,\n        rgba(20, 20, 20, 0.1) 10%,\n        rgba(20, 20, 20, 0.7) 70%,\n        rgba(20, 20,20, 1)\n     ),`;\nconst bgUrl = \"https://source.unsplash.com/random/1920x1080\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    // background-image 속성 초기화\n    this.state = {\n      bgImage: bgGradient + `url(${bgUrl})`\n    }\n\n    this.setNewBackground = this.setNewBackground.bind(this);\n  }\n\n  setNewBackground = event => {\n    if (event.key === \"Enter\") {\n      this.setState({\n        bgImage: bgGradient + `url(${bgUrl}?${event.target.value})`\n      })\n      \n    event.target.value = \"\";\n    event.preventDefault();\n    }\n  }\n\n  render() {\n    let newQueryUrl = {\n      backgroundImage: this.state.bgImage\n    }\n\n    return (\n      <div style={newQueryUrl} className=\"App-background\">\n        <Clock />\n        <input \n          placeholder=\"Search themes\" \n          onKeyPress={this.setNewBackground} \n          className=\"Theme-input\"\n        ></input>\n        <Todo />\n      </div>\n    );\n  }\n}\n\n// Styled Component를 이용하는 경우, 위 render() 함수를 return <Container />로 변경해주면 된다.\n// const Container = styled.div`\n//   position: absolute;\n//   top: 0;\n//   left: 0%;\n//   width: 100%;\n//   height: 100%;\n//   background: linear-gradient(\n//       to bottom,\n//       rgba(20, 20, 20, 0.1) 10%,\n//       rgba(20, 20, 20, 0.7) 70%,\n//       rgba(20, 20,20, 1)\n//    ),\n//     url(https://source.unsplash.com/random/1920x1080);\n//   background-size: cover;\n// `;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nlet destination = document.getElementById('root');\n\nReactDOM.render(\n    <App />,\n  destination\n);"],"sourceRoot":""}